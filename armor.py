# —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –∫—Ä–∞—Ñ—Ç–∞
# –∫–æ—Ä–æ–±–∫–∏, –∫–∏–ø–∞—Ä–∏—Ç k, –∏—Ä–∏–¥–∏–π i * 2, –¥–∏—Å–∫–∏ d * 2.5, –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä g * 4, –∫–≤–∞—Ä—Ü c * 7
# —Ç–∏—Ç–∞–Ω t, –æ—Å–º–∏–π o, –Ω–∏—Ç—Ä–∏–Ω n
crafted_weapon = []
from db.models import ArmorDB


class Armor:
    name = ""
    arm = 0
    life = 0
    max_life = 0
    cost = 0
    mats = 0
    z = 0
    upgrade_lvl = 0
    type = 0  # 0 head 1 body 2 foot
    use = 0
    type_stack = 0

    def __init__(self, name: str, arm: int, type: int, life: int = 500, max_life: int = 500, cost: int = 0, mats: int =0, type_stack: int = 0):
        self.name = name
        self.arm = arm
        self.life = life
        self.cost = cost
        self.mats = mats
        self.max_life = max_life
        self.type = type
        self.type_stack = type_stack

    def get_data_drop(self) -> str:
        return self.get_data("dra_")

    def get_data(self, code: str ="eqa_") -> str:
        out = f"‚ñ™Ô∏è {self.name} üõ° {self.arm} üîß{round(100 * self.life / self.max_life)} % /{code}{self.type}t{self.arm}z{self.z}"

        return out

    def get_data_cost(self) -> str:
        out = f"‚ñ™Ô∏è {self.name} üõ° Ô∏è{self.arm} üîß{round(100 * self.life / self.max_life)} % üì¶ {self.calc_cost()} /sa_{self.type}t{self.arm}z{self.z}"
        return out

    def get_buy(self) -> str:
        out = f"‚ñ™Ô∏è {self.name} üõ° {self.arm} üï≥{self.calc_cost()} /ba_{self.type}t{self.arm}"
        return out

    # def craft_cost(self):
    #    self.calc_cost()

    def calc_cost(self) -> int:
        if self.cost:
            return round(self.cost * self.life / self.max_life)
        else:
            return round(self.arm * 100 * self.life / self.max_life + self.arm * 200)

    def get_data_hero(self) -> str:
        out = f"‚ñ™Ô∏è {self.name} üõ° {self.arm} üîß{round(100 * self.life / self.max_life)} %"
        return out

    def get_code(self) -> str:
        return f"{self.type}t{self.arm}z{self.z}"

    def to_db(self) -> ArmorDB:
        return ArmorDB(code=self.get_code(), use=self.use, life=self.life, max_life=self.max_life)

    def from_db(self, armor_db: ArmorDB) -> None:
        self.life = armor_db.life
        self.max_life = armor_db.max_life
        self.use = armor_db.use


# —Å–∏–ª–∞ –ª–æ–≤–∫–∞ —É–¥–∞—á–∞ –º–µ—Ç–∫–æ—Å—Ç—å
stack_buff = [
    [0, 50, 50, 0],
    [30, 70, 50, 0],
    [50, 50, 50, 0],
    [70, 70, 100, 0],
    [100, 0, 100, 100],
    [150, 100, 150, 0],
    [200, 120, 100, 100]
]

armor_all = [[Armor("–∫–µ–ø–∫–∞", 1, 0, life=100, max_life=100),
              Armor("—à–∞–ø–∫–∞", 2, 0, life=100, max_life=100),
              Armor("–∫–∞—Å–∫–∞", 5, 0, life=100, max_life=100),
              Armor("—à–ª–µ–º –≤–æ–∏—Ç–µ–ª—è", 7, 0, life=200, max_life=200),
              Armor("—É—Å–∏–ª–µ–Ω–Ω–∞—è —à–∞–ø–∫–∞", 10, 0, life=300, max_life=300),

              Armor("‚ú≥Ô∏è—Ç–∏—Ç–∞–Ω–æ–≤—ã–π —à–ª–µ–º", 15, 0, life=500, max_life=500, type_stack=1, cost=50000),
              # +50 –ª–æ–≤–∫–∏ + 50 —É–¥–∞—á–∏
              Armor("üí†–∞–¥–∞–º–∞–Ω—Ç–æ–≤—ã–π —à–ª–µ–º", 25, 0, life=500, max_life=500, type_stack=2, cost=60000),
              # +70 –ª–æ–≤–∫–∏ +30 —Å–∏–ª—ã + 50 —É–¥–∞—á–∏
              Armor("üëπ–¥–∞—ç–¥—Ä–∏—á–µ—Å–∫–∏–π —à–ª–µ–º", 35, 0, life=500, max_life=500, type_stack=3, cost=80000),
              # +50 —Å–∏–ª—ã + 30 –ª–æ–≤–∫–∏ + 50 —É–¥–∞—á–∏
              Armor("‚òØÔ∏è–º–∏—Ñ–∏—á–µ—Å–∫–∏–π —à–ª–µ–º", 50, 0, life=600, max_life=600, type_stack=4, cost=150000),
              # +70 –ª–æ–≤–∫–∏ + 70 —Å–∏–ª—ã + 100 —É–¥–∞—á–∏
              Armor("üê≤—à–ª–µ–º –¥—Ä–∞–∫–æ–Ω–∞", 70, 0, life=700, type_stack=5, max_life=700),
              # +100 –º–µ—Ç–∫–æ—Å—Ç–∏ +100 —Å–∏–ª—ã + 100 —É–¥–∞—á–∏
              Armor("‚ò¢Ô∏è–∞—Ç–æ–º–Ω—ã–π —à–ª–µ–º", 120, 0, life=1000, type_stack=6, max_life=1000),
             # +150 —Å–∏–ª—ã +100 –ª–æ–≤–∫–æ—Å—Ç–∏ + 150 —É–¥–∞—á–∏
              Armor("‚ò£Ô∏è—à–ª–µ–º —Ç–∏—Ä–∞–Ω–∏–¥", 140, 0, life=1500, type_stack=7, max_life=1500)],

             [Armor("–ø–ª–∞—â", 1, 1, life=100, max_life=100),
              Armor("–∫—É—Ä—Ç–∫–∞", 2, 1, life=100, max_life=100),
              Armor("–±—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç", 5, 1, life=100, max_life=100),
              Armor("–±—Ä–æ–Ω—è –ª–µ–≥–∫–∞—è", 10, 1, life=100, max_life=100),
              Armor("—Ç—è–∂–µ–ª–∞—è –±—Ä–æ–Ω—è", 20, 1, life=100, max_life=100),

              Armor("‚ú≥Ô∏è—Ç–∏—Ç–∞–Ω–æ–≤–∞—è –±—Ä–æ–Ω—è", 40, 1, life=500, max_life=500, type_stack=1, cost=70000),
              Armor("üí†–∞–¥–∞–º–∞–Ω—Ç–æ–≤–∞—è –±—Ä–æ–Ω—è", 50, 1, life=500, max_life=500, type_stack=2, cost=80000),
              Armor("üëπ–¥–∞—ç–¥—Ä–∏—á–µ—Å–∫–∞—è –±—Ä–æ–Ω—è", 65, 1, life=500, max_life=500, type_stack=3, cost=100000),
              Armor("‚òØÔ∏è–º–∏—Ñ–∏—á–µ—Å–∫–∞—è –±—Ä–æ–Ω—è", 90, 1, life=700, type_stack=4, max_life=700, cost=150000),
              Armor("üê≤–±—Ä–æ–Ω—è –¥—Ä–∞–∫–æ–Ω–∞", 140, 1, life=1000, type_stack=5, max_life=1000),
              Armor("‚ò¢Ô∏è–∞—Ç–æ–º–Ω–∞—è –±—Ä–æ–Ω—è", 190, 1, life=1500, type_stack=6, max_life=1500),
              Armor("‚ò£Ô∏è–±—Ä–æ–Ω—è —Ç–∏—Ä–∞–Ω–∏–¥", 220, 1, life=1500, type_stack=7, max_life=1500)],

             [Armor("—Ä—É–∫–∞–≤–∏—Ü—ã", 1, 2, life=100, max_life=100),
              Armor("–ø–µ—Ä—á–∞—Ç–∫–∏", 2, 2, life=100, max_life=100),
              Armor("–±—Ä–∞—Å–ª–µ—Ç", 5, 2, life=100, max_life=100),
              Armor("–∂–µ–ª–µ–∑–Ω—ã–µ –ø–µ—Ä—á–∞—Ç–∫–∏", 8, 2, life=200, max_life=200),
              Armor("–≤–∞—Ä–µ–∂–∫–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è", 10, 2, life=300, max_life=300),

              Armor("‚ú≥Ô∏è—Ç–∏—Ç–∞–Ω–æ–≤—ã–µ –ø–µ—Ä—á–∞—Ç–∫–∏", 15, 2, life=500, type_stack=1, max_life=500, cost=50000),
              Armor("üí†–∞–¥–∞–º–∞–Ω—Ç–æ–≤—ã–µ –ø–µ—Ä—á–∞—Ç–∫–∏", 25, 2, life=500, type_stack=2, max_life=500, cost=70000),
              Armor("üëπ–¥–∞—ç–¥—Ä–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä—á–∞—Ç–∫–∏", 40, 2, life=500, type_stack=3, max_life=500, cost=90000),
              Armor("‚òØÔ∏è–º–∏—Ñ–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä—á–∞—Ç–∫–∏", 60, 2, life=700, type_stack=4, max_life=700, cost=100000),
              Armor("üê≤–ø–µ—Ä—á–∞—Ç–∫–∏ –¥—Ä–∞–∫–æ–Ω–∞", 90, 2, life=800, type_stack=5, max_life=800),
              Armor("‚ò¢Ô∏è–∞—Ç–æ–º–Ω—ã–µ –ø–µ—Ä—á–∞—Ç–∫–∏", 120, 2, life=1000, type_stack=6, max_life=1000),
              Armor("‚ò£Ô∏èÔ∏è–ø–µ—Ä—á–∞—Ç–∫–∏ —Ç–∏—Ä–∞–Ω–∏–¥", 120, 2, life=1500, type_stack=7, max_life=1500)
              ]]
