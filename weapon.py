from db.models import WeaponDB
from stock import used_items

class Weapon:
    name = ""
    dmg = 0
    life = 0
    max_life = 0
    cost = 0
    mats = 0
    z = 0
    upgrade_lvl = 0
    use = 0
    mod = 0

    def __init__(self, name, dmg, life=500, max_life=500, cost=0, mats=0):
        self.name = name
        self.dmg = dmg
        self.life = life
        self.cost = cost
        self.mats = mats
        self.max_life = max_life

    def get_data_drop(self) -> str:
        return self.get_data("drw_")

    def dmg_mod(self):
        mod = ""
        if self.mod:
            dmg = used_items[self.mod].get("damage")
            mod = "+" + str(dmg) if dmg > 0 else str(dmg)
        return mod

    def get_data(self, code="eqw_") -> str:

        out = f"‚ñ™Ô∏è {self.get_name()} ‚ö°Ô∏è{self.dmg}{self.dmg_mod()} üîß{round(100 * self.life / self.max_life)} % /{code}{self.dmg}z{self.z}"
        return out

    def get_data_mod(self, mod=100) -> str:
        out = f"‚ñ™Ô∏è {self.get_name()} ‚ö°Ô∏è{self.dmg} üîß{round(100 * self.life / self.max_life)} % /mod_{self.dmg}z{self.z}m{mod}"
        return out

    def get_data_cost(self) -> str:
        out = f"‚ñ™Ô∏è {self.get_name()} ‚ö°Ô∏è{self.dmg_mod()} üîß{round(100 * self.life / self.max_life)} % üì¶ {self.calc_cost()} /sw_{self.dmg}z{self.z}"

        return out

    def get_buy(self) -> str:
        out = f"‚ñ™Ô∏è {self.get_name()} ‚ö°{self.dmg_mod()} üï≥{self.calc_cost()} /bw_{self.dmg}"
        return out

    def calc_cost(self) -> int:
        if not self.cost:
            return round(self.dmg * 100 * self.life / self.max_life + self.dmg * 200)
        else:
            return round(self.cost * self.life / self.max_life)

    def get_data_hero(self, summ: bool=False) -> str:
        if not summ:
            out = f"‚ñ™Ô∏è {self.get_name()} ‚ö°Ô∏è{self.dmg}{self.dmg_mod()} üîß{round(100 * self.life / self.max_life)} %"
        else:
            dmg = self.dmg
            if self.dmg_mod() != '':
                dmg += int(self.dmg_mod())
            out = f"‚ñ™Ô∏è {self.get_name()} ‚ö°Ô∏è{dmg} üîß{round(100 * self.life / self.max_life)} %"
        return out

    def get_name(self) -> str:
        if self.mod:
            return self.name + "*"
        return self.name

    def get_code(self) -> str:
        return f"{self.dmg}z{self.z}"

    def to_db(self) -> WeaponDB:
        return WeaponDB(code=self.get_code(), use=self.use, life=self.life, max_life=self.max_life, mod=self.mod)

    def from_db(self, weapon_db) -> None:
        self.life = weapon_db.life
        self.max_life = weapon_db.max_life
        self.use = weapon_db.use
        self.z = int(weapon_db.code.split('z')[1])
        self.dmg = int(weapon_db.code.split('z')[0])
        self.mod = weapon_db.mod


weapons_all = [Weapon("–±–∏—Ç–∞", 1, cost=100),  # —Ç–∏—Ç–∞–Ω–æ–≤—ã–π –∞—Ä–±–∞–ª–µ—Ç, –ª–∞–∑–µ—Ä–Ω—ã–π –ª—É–∫, —Å–µ–∫–∏—Ä–∞ –ø–ª–∞–∑–º—ã
               Weapon("üó°–º–µ—á", 5, cost=1000),
               Weapon("üî´–ø–∏—Å—Ç–æ–ª–µ—Ç", 10, cost=5000),
               Weapon("üî´‚ö°Ô∏è–∞–≤—Ç–æ–º–∞—Ç", 20, cost=15000),
               Weapon("üèπ–∞—Ä–±–∞–ª–µ—Ç", 30, cost=25000),
               Weapon("—Å–Ω–∞–π–ø–µ—Ä—Å–∫–∞—è –≤–∏–Ω—Ç–æ–≤–∫–∞", 40, cost=45000),
               Weapon("üí•–ª–∞–∑–µ—Ä", 50, cost=70000),
               Weapon("‚ö°Ô∏èÔ∏è—ç–ª–µ–∫—Ç—Ä–æ—à–æ–∫", 75, life=700, max_life=700, cost=80000),
               Weapon("üöÄ—Ä–∞–∫–µ—Ç–Ω–∏—Ü–∞", 100, life=900, max_life=900, cost=100000),
               Weapon("‚ôªÔ∏è—Ä–∞–Ω–¥–æ–º–≥–∞–Ω", 120, life=1000, max_life=1000, cost=120000),  # 9
               Weapon("‚òÑÔ∏è—Ä–µ–ª—å—Å–∞", 180, life=1200, max_life=1200, cost=130000),
               Weapon("‚ùáÔ∏è–ø–æ—Ç—Ä–æ—à–∏—Ç–µ–ª—å", 240, life=1200, max_life=1200, cost=140000),
               Weapon("üß®–≥—Ä–∞–Ω–∞—Ç–æ–º–µ—Ç", 300, life=1500, max_life=1500, cost=160000),
               Weapon("‚ô®Ô∏è—Å–≤—è—Ç–æ–µ –ø–ª–∞–º—è", 350, life=1500, max_life=1500, cost=170000),  # 13
               Weapon("üîÆ–ø–ª—é–º–±—É—Å", 400, life=1500, max_life=1500, cost=180000),
               Weapon("üí†–¥–µ–∑–∏–Ω—Ç–µ–≥—Ä–∞—Ç–æ—Ä", 500, life=1500, max_life=1500, cost=190000),
               Weapon("ü¶†—á–µ—Ä–Ω–∞—è –≤–¥–æ–≤–∞", 550, life=1500, max_life=1500),  # 16
               Weapon("üîÜ—è–¥–µ—Ä–Ω—ã–π —É–Ω–∏—á—Ç–æ–∂–∏—Ç–µ–ª—å", 600, life=2000, max_life=2000),
               Weapon("üå™–ª–∞–∑–µ—Ä–Ω–æ–µ —Ç–æ—Ä–Ω–∞–¥–æ", 650, life=2000, max_life=2000),
               Weapon("üåÄ—á–µ—Ä–Ω–∞—è –¥—ã—Ä–∞", 700, life=2000, max_life=2000), #19
               Weapon("‚ú¥Ô∏è–ø—É—à–∫–∞ —Ç–∏—Ä–∞–Ω–∏–¥", 750, life=2000, max_life=2000),
               Weapon("üî™–∫–æ—Å–∞ —Å–º–µ—Ä—Ç–∏", 666, life=1000, max_life=1000), #21
               Weapon("ü™ì–∫–ª–æ—É–Ω—Å–∫–∏–π –º–æ–ª–æ—Ç–æ–∫", 456, life=1000, max_life=1000), #22
               Weapon("ü¶Ø–ü–æ—Å–æ—Ö –®–∞–æ-–ö–∞–Ω–∞", 730, life=1000, max_life=1000),
               Weapon("üó°–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª–∏–Ω–æ–∫", 800, life=2000, max_life=2000),
               Weapon("üî±–¢—Ä–∏–∑—É–± —Ç–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä–∞", 770, life=2000, max_life=2000),
               ]
